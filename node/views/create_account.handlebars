<body>
    {{!-- <link href="https://fonts.googleapis.com/css?family=Italiana&display=swap" rel="stylesheet" /> --}}
    <link rel="stylesheet" href="./css/creat_account.css" />


    <div class="container">
        {{#if toastMessage}}
        <p>{{toastMessage}}</p>
        {{/if}}

        <div class="frame"></div>
        <div class="pannel">
            <div class="pannelshadow"></div>
            <form action="/create_account" method="POST">
                <div class="toastMessage">{{toastMessage}}</div>
                <button type="submit" class="submitbtn">Submit</button>
                <span id="submitHint" class="submitHint"></span>

                <div class="iconcontainer">
                    <div class="icon1" data-icon="boy1.png"></div>
                    <div class="icon2" data-icon="boy2.png"></div>
                    <div class="icon3" data-icon="boy3.png"></div>
                    <div class="icon4" data-icon="boy4.png"></div>
                    <div class="icon5" data-icon="girl1.png"></div>
                    <div class="icon6" data-icon="girl2.png"></div>
                    <div class="icon7" data-icon="girl3.png"></div>
                    <div class="icon8" data-icon="girl4.png"></div>
                    <div class="icon9" data-icon="girl5.png"></div>
                    <input type="hidden" id="icon" name="icon" value="" required>
                </div>
                <span class="chooseicon">Please choose your icon</span>

                <input type="text" name="Brief_Description" class="descriptiontext"
                    placeholder="Please describe yourself in 30 words" value="{{userProfile.Brief_Description}}"
                    oninput="checkDescriptionLength(this)" required>
                <span class="description">Description</span>
                <span id="descriptionHint" class="descriptionHint"></span>

                <input type="password" name="repassword" class="confirmpasswordtext"
                    placeholder="Please confirm your password" required>
                <span class="confirmpassword">Confirm Password</span>
                <div class="passwordAvailability" id="passwordAvailability"></div>

                <input type="password" id="password" name="password" class="passwordtext"
                    placeholder="Please enter your password, at least 5 characters long" required>
                <span class="password">Password</span>
                <div class="passwordHint" id="passwordHint"></div>

                <input type="date" name="birthdate" class="birthdatetext" placeholder="DD/MM/YYYY"
                    value="{{userProfile.Date_Of_Birth}}" max="{{currentDate}}" required>
                <span class="birthdate">Birth date</span>
                <span id="birthdateHint" class="birthdateHint"></span>

                <input type="text" name="idname" class="idnametext" placeholder="Please enter your real name"
                    value="{{userProfile.Real_Name}}" required>
                <span class="idname">Real Name</span>

                
                    <input type="text" name="username" class="usernametext" placeholder="Please enter your username"
                        value="{{userProfile.Username}}" required>
                    <span class="username">Username</span>
                    <div class="usernameAvailability" id="usernameAvailability"></div>

               

            </form>

            <a href="http://localhost:3000/user_login"><span class="haveaccount">Already have an account.</span></a>
            <span class="creataccount">Create Account</span>
            <div class="logo"></div>

        </div>
    </div>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        // icon selection
        $(document).ready(function () {
            $('.iconcontainer div').on('click', function () {
                $('.iconcontainer div').css('outline', ''); // cancel all outlines
                $(this).css('outline', '2px solid red'); // emphasize the clicked one
                $('#icon').val($(this).attr('data-icon')); // update the hidden input field
            });
        });

        // username input check
        const usernameAvailability = document.getElementById("usernameAvailability");
        let usernameAvailable = false;
        document.querySelector("input[name='username']").addEventListener("input", function () {
            const username = this.value;
            if (!username.trim()) {
                document.getElementById("usernameAvailability").textContent = '';
            } else {
                fetch(`/check_username/${username}`)
                    .then(response => response.text())
                    .then(message => {
                        if (username.length < 3 || username.length > 10) {
                            usernameAvailability.style.color = 'red';
                            document.getElementById("usernameAvailability").textContent = 'Please limit username to 3-10 characters';
                            usernameAvailable = false;
                        } else if (message == "Username is available") {
                            document.getElementById("usernameAvailability").textContent = message;
                            usernameAvailability.style.color = 'green';
                            usernameAvailable = true;
                        } else if (message == "Username already exists, please choose another") {
                            usernameAvailability.style.color = 'red';
                             document.getElementById("usernameAvailability").textContent = message;
                            usernameAvailable = false;
                        } else {
                            document.getElementById("usernameAvailability").textContent = message;
                            usernameAvailable = false;
                        }
                    });
            }
        });

        document.querySelector("form[action='/create_account']").addEventListener("submit", function (event) {
            const iconValue = document.getElementById("icon").value;

            if (!iconValue || !usernameAvailable) {
                event.preventDefault();
                if (!iconValue) {
                    document.getElementById("submitHint").textContent = 'Please choose your icon';
                }
                if (!usernameAvailable) {
                    document.getElementById("usernameAvailability").textContent = 'Username already exists, please choose another';
                }
            }
        });



        // password input check
        const passwordInput = document.getElementById("password");
        const confirmInput = document.querySelector("input[name='repassword']");
        function preventSubmit(event) {
            event.preventDefault();
        }

        function checkPasswords() {
            const password = passwordInput.value;
            const confirmation = confirmInput.value;

            const form = document.querySelector("form[action='/create_account']");
            form.removeEventListener("submit", preventSubmit);

            // Check the length of the password
            if (password.length < 5) {
                passwordHint.textContent = 'Password must be at least 5 characters long';
                form.addEventListener("submit", preventSubmit);
            } else {
                passwordHint.textContent = '';
            }

            // Check that the passwords match
            if (password !== confirmation) {
                document.getElementById("passwordAvailability").textContent = 'Passwords do not match';
                form.addEventListener("submit", preventSubmit);
            } else {
                document.getElementById("passwordAvailability").textContent = '';
            }
        }

        passwordInput.addEventListener("input", checkPasswords);
        confirmInput.addEventListener("input", checkPasswords);



        // Check if the Description input exceeds 30 characters
        const descriptionHint = document.getElementById("descriptionHint");

        function checkDescriptionLength(input) {
            const maxLen = 30;
            if (input.value.length > maxLen) {
                descriptionHint.textContent = 'Input cannot exceed 30 characters!';
                input.value = input.value.slice(0, maxLen);
            } else {
                descriptionHint.textContent = '';
            }
        }

        // Get current date in YYYY-MM-DD format
        function getCurrentDate() {
            const now = new Date();
            const year = now.getFullYear();
            const month = String(now.getMonth() + 1).padStart(2, '0');
            const day = String(now.getDate()).padStart(2, '0');
            return `${year}-${month}-${day}`;
        }

        const birthdateInput = document.querySelector("input[name='birthdate']");
        const birthdateHint = document.getElementById("birthdateHint");
        const currentDate = getCurrentDate();

        birthdateInput.max = currentDate;

        birthdateInput.addEventListener('change', function () {
            const selectedDate = new Date(this.value);
            const currentDateObj = new Date(currentDate);

            if (selectedDate > currentDateObj) {
                birthdateHint.textContent = 'Please select a date before the current date';
            } else {
                birthdateHint.textContent = '';
            }
        });


    </script>
</body>